package com.bless.leetcode.动态规划;

public class 剪绳子 {
    public int cuttingRope(int n) {
        int[] best = new int[n + 1];
        best[0] = 0;
        best[1] = 0;
        best[2] = 1;
        // 分别计算不同长度下分割绳子的最大乘积
        for (int i = 3; i <= n; i++) {
            // 分割长度
            for (int j = 2; j <= n; j++) {
                // j*(i-j)表示分割成两段的乘积、j*best[i-1]表示分割成多段的乘积
                int t = Math.max(j * (i - j), j * best[i - j]);
                // 尝试多种长度的分割，选出最大乘积
                best[i] = Math.max(t, best[i]);
            }
        }
        return best[n];
    }
}
//07:31 PM
//题目描述：
//一个IPv4地址可用点分十进制表示，格式为x1.x2.x3.x4，对合法的定义简化为：
//x1、x2、x3、x4 的合法范围均为 [0, 255]，分隔符是字符.。
//不考虑IP地址的具体含义，比如 0.0.0.0、255.255.255.255也是合法的。
//现给定一个仅含数字字符的字符串，请问由这些数字字符配合分隔符共能组合成多少个不同的IPv4地址？
//约定：
//每个数字字符可以重复使用。
//ip地址的每段不含前导零， 8.8.8.8 和 08.08.008.008 是相同的IP地址，其转换为十进制数后也是相同的。
//输入：
//一个字符串，仅为数字字符且彼此不重复。字符串长度范围[1, 10]
//输出：
//一个整数，表示符合要求的的IPv4地址的数量。
//样例
//输入样例
//23
//输出样例
//10000
//提示样例
//由 2、3 能够组合成 10 个不同的 0~255 的整数，分别为：
//2、3、22、23、32、33、222、223、232、233。
//该IP地址的每个字段都有10种组合，那么四个字段共有10000（即10^4）个不同的IPv4地址。
//2+2*2+1*2*2=10
